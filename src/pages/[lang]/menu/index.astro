---
export function getStaticPaths() {
  return [
    { params: { lang: 'es' } },
    { params: { lang: 'en' } }
  ];
}

const { lang } = Astro.params;
import type { FoodItemEntry, FoodItemEntryMetaItem, MealTypeEntry, MealTypeEntryMetaItem, MenuPageEntry, MenuPageEntryMetaItem } from "../../../../bcms/types/ts";
import MenuMeals from "../../../components/menu-page/Meals";
import Layout from "../../../layouts/Layout.astro";
import { bcmsPrivate } from '../../../bcms-private';
import { bcmsPublic } from '../../../bcms-public';

const menuPageEntries = (await bcmsPrivate.entry.getBySlug(
    'menu',
    'menu-page',
)) as MenuPageEntry;

if (!menuPageEntries) {
    return notFound();
}

const menuPageMeta = menuPageEntries.meta[lang] as MenuPageEntryMetaItem;

const mealTypes = (
    (await bcmsPrivate.entry.getAll('meal-type')) as MealTypeEntry[]
).map((e) => e.meta[lang] as MealTypeEntryMetaItem);
const foodItems = (
    (await bcmsPrivate.entry.getAll('food-item')) as FoodItemEntry[]
).map((e) => e.meta[lang] as FoodItemEntryMetaItem);

const bcmsConfig = bcmsPublic.getConfig();
---

<Layout lang={lang} title={`${menuPageMeta.seo?.title || menuPageMeta.title} - Casa de los Sabores`}>
    <div>
        <MenuMeals
            meta={menuPageMeta}
            meals={mealTypes}
            foodItems={foodItems}
            client:load
            bcmsConfig={bcmsConfig}
            lang={lang}
        />
    </div>
</Layout>
